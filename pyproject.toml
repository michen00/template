[project]
name = "template"
version = "0.0.0"
description = "template"
readme = "README.md"
authors = [{ name = "Michael I Chen", email = "michael.chen.0@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "numpy>=2.2.6",
    "pandera[polars]>=0.25.0",
    "plotly>=6.3.1",
    "polars>=1.32.2",
    "pydantic-settings>=2.10.1",
    "pydantic>=2.11.7",
    "pyyaml>=6.0.2",
    "rich-argparse>=1.7.1",
    "structlog>=25.4.0",
    "typer>=0.16.0",
    "yapic-json>=1.9.5",
]

[project.scripts]
example-script = "template.example_script:main"

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "nox[uv]>=2025.5.1",
    "pip>=25.2",
    "pre-commit>=4.3.0",
    "pylint>=3.3.2",
    "ruff>=0.12.4",
]
test = ["coverage>=7.9.2", "pytest>=8.4.0", "pytest-cov>=6.2.1", "pytest-xdist>=3.8.0"]

[tool.uv]
default-groups = []
package        = true

[tool.uv.workspace]
members = ["template"]

[tool.mypy]
allow_redefinition = true
disable_error_code = ["import-untyped"]
disallow_subclassing_any = false
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
enable_incomplete_feature = ["InlineTypedDict", "PreciseTupleTypes"]
exclude = '''(?x)(
    notebooks/     # exclude all files in the notebooks directory
    | tests/       # tests are runtime-checked via pytest; skip mypy here
    | \.ipynb$     # or files ending with ".ipynb"
)'''
local_partial_types = true
plugins = ["pydantic.mypy"]
pretty = true
show_column_numbers = true
show_error_code_links = true
strict = true
warn_return_any = true
warn_unreachable = true

[[tool.uv.index]]
name        = "testpypi"
url         = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit    = true

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--strict-config",
    "--strict-markers",
    "--cov=template",
    "--cov-report=term-missing",
]
filterwarnings = ["error", "ignore::DeprecationWarning"]
log_cli_level = "INFO"
markers = [
    "no_ci: marks tests that should not run in CI (deselect with '-m \"not no_ci\"')",
]
minversion = "8.2"
testpaths = ["tests"]
xfail_strict = true

[build-system]
requires      = ["uv_build >= 0.8.17, <0.9.0"]
build-backend = "uv_build"
